{"version":3,"file":"index.js","sources":["../src/js/pixabay-api.js","../src/js/render-functions.js","../src/main.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nexport function getImagesByQuery(query) {\r\n    return axios.get('https://pixabay.com/api/?', {\r\n        params: {\r\n            key: '49618658-bd62d28bb73c3efea12ea07c4',\r\n            q: query,\r\n            image_type: 'photo',\r\n            orientation: 'horizontal',\r\n            safesearch: true\r\n        }\r\n    })\r\n}","import SimpleLightbox from \"simplelightbox\";\r\nimport 'simplelightbox/dist/simple-lightbox.min.css';\r\n\r\nconst gallery = document.querySelector('.gallery');\r\nconst loader = document.querySelector('.loader')\r\n\r\nexport function createGallery(images) {\r\n    const markup = images.map(({ webformatURL, largeImageURL, tags, likes, views, comments, downloads }) => `\r\n        <li class='gallery-item'>\r\n            <a class='gallery-link' href='${largeImageURL}'>\r\n                <img\r\n                    src='${webformatURL}'\r\n                    alt='${tags}'\r\n                    width='360'\r\n                    height='200'/>\r\n            </a>\r\n            <div>\r\n                <ul class='photo-stats-list'>\r\n                    <li class='photo-stats-item'>\r\n                        <p class='photo-stats-heads'>Likes</p>\r\n                        <p class='photo-stats-number'>${likes}</p>\r\n                    </li>\r\n                    <li class='photo-stats-item'>\r\n                        <p class='photo-stats-heads'>Views</p>\r\n                        <p class='photo-stats-number'>${views}</p>\r\n                    </li>\r\n                    <li class='photo-stats-item'>\r\n                        <p class='photo-stats-heads'>Comments</p>\r\n                        <p class='photo-stats-number'>${comments}</p>\r\n                    </li>\r\n                    <li class='photo-stats-item'>\r\n                        <p class='photo-stats-heads'>Downloads</p>\r\n                        <p class='photo-stats-number'>${downloads}</p>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        </li>\r\n    `).join('');\r\n    gallery.innerHTML = markup;\r\n    lbox.refresh();\r\n}\r\n\r\nconst lbox = new SimpleLightbox('.gallery a', {\r\n    captionsData: 'alt',\r\n    captionDelay: 250,\r\n})\r\n\r\nexport function clearGallery() { \r\n    gallery.innerHTML = '';\r\n}\r\n\r\nexport function showLoader() { \r\n    loader.style.display = 'block';\r\n}\r\nexport function hideLoader() {\r\n    loader.style.display = 'none';\r\n}","import iziToast from 'izitoast';\r\nimport 'izitoast/dist/css/iziToast.min.css';\r\nimport { getImagesByQuery } from './js/pixabay-api';\r\nimport {\r\n  createGallery,\r\n  clearGallery,\r\n  showLoader,\r\n  hideLoader,\r\n} from './js/render-functions';\r\n\r\nconst form = document.querySelector('.form');\r\nform.addEventListener('submit', handleSubmit);\r\n\r\nhideLoader();\r\n\r\nfunction handleSubmit(event) {\r\n  event.preventDefault();\r\n  showLoader();\r\n\r\n  const query = event.currentTarget.elements['search-text'];\r\n  const queryValue = query.value.trim();\r\n\r\n  getImagesByQuery(queryValue)\r\n    .then(response => {\r\n      if (response.data.total === 0) {\r\n        iziToast.error({\r\n          messageColor: '#fafafb',\r\n          titleColor: '#fafafb',\r\n          backgroundColor: '#ef4040',\r\n          message:\r\n            'Sorry, there are no images matching your search query. Please try again!',\r\n          position: 'topRight',\r\n        });\r\n        return hideLoader();\r\n      }\r\n      createGallery(response.data.hits);\r\n      return hideLoader();\r\n    })\r\n    .catch(error => {\r\n      iziToast.error({\r\n        messageColor: '#fafafb',\r\n        titleColor: '#fafafb',\r\n        backgroundColor: '#ef4040',\r\n        message: error,\r\n        position: 'topRight',\r\n      });\r\n    });\r\n  clearGallery();\r\n  form.reset();\r\n}\r\n"],"names":["getImagesByQuery","query","axios","gallery","loader","createGallery","images","markup","webformatURL","largeImageURL","tags","likes","views","comments","downloads","lbox","SimpleLightbox","clearGallery","showLoader","hideLoader","form","handleSubmit","event","queryValue","response","iziToast","error"],"mappings":"owBAEO,SAASA,EAAiBC,EAAO,CACpC,OAAOC,EAAM,IAAI,4BAA6B,CAC1C,OAAQ,CACJ,IAAK,qCACL,EAAGD,EACH,WAAY,QACZ,YAAa,aACb,WAAY,EACf,CACT,CAAK,CACL,CCTA,MAAME,EAAU,SAAS,cAAc,UAAU,EAC3CC,EAAS,SAAS,cAAc,SAAS,EAExC,SAASC,EAAcC,EAAQ,CAClC,MAAMC,EAASD,EAAO,IAAI,CAAC,CAAE,aAAAE,EAAc,cAAAC,EAAe,KAAAC,EAAM,MAAAC,EAAO,MAAAC,EAAO,SAAAC,EAAU,UAAAC,CAAW,IAAK;AAAA;AAAA,4CAEhEL,CAAa;AAAA;AAAA,2BAE9BD,CAAY;AAAA,2BACZE,CAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wDAQyBC,CAAK;AAAA;AAAA;AAAA;AAAA,wDAILC,CAAK;AAAA;AAAA;AAAA;AAAA,wDAILC,CAAQ;AAAA;AAAA;AAAA;AAAA,wDAIRC,CAAS;AAAA;AAAA;AAAA;AAAA;AAAA,KAK5D,EAAE,KAAK,EAAE,EACVX,EAAQ,UAAYI,EACpBQ,EAAK,QAAO,CAChB,CAEA,MAAMA,EAAO,IAAIC,EAAe,aAAc,CAC1C,aAAc,MACd,aAAc,GAClB,CAAC,EAEM,SAASC,GAAe,CAC3Bd,EAAQ,UAAY,EACxB,CAEO,SAASe,GAAa,CACzBd,EAAO,MAAM,QAAU,OAC3B,CACO,SAASe,GAAa,CACzBf,EAAO,MAAM,QAAU,MAC3B,CC9CA,MAAMgB,EAAO,SAAS,cAAc,OAAO,EAC3CA,EAAK,iBAAiB,SAAUC,CAAY,EAE5CF,IAEA,SAASE,EAAaC,EAAO,CAC3BA,EAAM,eAAc,EACpBJ,IAGA,MAAMK,EADQD,EAAM,cAAc,SAAS,aAAa,EAC/B,MAAM,KAAI,EAEnCtB,EAAiBuB,CAAU,EACxB,KAAKC,GACAA,EAAS,KAAK,QAAU,GAC1BC,EAAS,MAAM,CACb,aAAc,UACd,WAAY,UACZ,gBAAiB,UACjB,QACE,2EACF,SAAU,UACpB,CAAS,EACMN,EAAU,IAEnBd,EAAcmB,EAAS,KAAK,IAAI,EACzBL,EAAU,EAClB,EACA,MAAMO,GAAS,CACdD,EAAS,MAAM,CACb,aAAc,UACd,WAAY,UACZ,gBAAiB,UACjB,QAASC,EACT,SAAU,UAClB,CAAO,CACP,CAAK,EACHT,IACAG,EAAK,MAAK,CACZ"}